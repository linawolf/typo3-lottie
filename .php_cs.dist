<?php
if (PHP_SAPI !== 'cli') {
	die('This script supports command line usage only. Please check your command.');
}

$year = date('Y');
$header = <<<EOF
This file is part of the "lottie" Extension for TYPO3 CMS.
For the full copyright and license information, please read the LICENSE file
that was distributed with this source code.
(c) 2019-$year
EOF;


return PhpCsFixer\Config::create()
	->setRiskyAllowed(true)
	->setRules([
		'@DoctrineAnnotation' => true,
		'@PSR2' => true,

		'array_syntax' => [
			'syntax' => 'short'
		],
		'binary_operator_spaces' => [
			'operators' => [
				'|' => 'single_space',
			],
		],
		'blank_line_after_namespace' => true,
		'blank_line_after_opening_tag' => false,
		'braces' => [
			'allow_single_line_closure' => true,
			'position_after_anonymous_constructs' => 'same',
			'position_after_functions_and_oop_constructs' => 'same',
			'position_after_control_structures' => 'same',
		],
		'cast_spaces' => [
			'space' => 'none'
		],
		'class_keyword_remove' => false,
		'compact_nullable_typehint' => true,
		'concat_space' => [
			'spacing' => 'one',
		],
		'declare_equal_normalize' => [
			'space' => 'none',
		],
		'dir_constant' => true,
		'fully_qualified_strict_types' => true,
		'function_declaration' => [
			'closure_function_spacing' => 'one',
		],
		'function_typehint_space' => true,
		'hash_to_slash_comment' => true,
		'indentation_type' => true,
		'logical_operators' => true,
		'lowercase_cast' => true,
		'lowercase_keywords' => true,
		'lowercase_static_reference' => true,
		'method_argument_space' => [
			'on_multiline' => 'ensure_fully_multiline'
		],
		'modernize_types_casting' => true,
		'native_function_casing' => true,
		'new_with_braces' => true,
		'no_alias_functions' => true,
		'no_blank_lines_after_class_opening' => false,
		'no_blank_lines_after_phpdoc' => true,
		'no_blank_lines_before_namespace' => true,
		'no_closing_tag' => true,
		'no_empty_comment' => true,
		'no_empty_phpdoc' => true,
		'no_empty_statement' => true,
		'no_extra_consecutive_blank_lines' => false,
		'no_leading_import_slash' => true,
		'no_leading_namespace_whitespace' => true,
		'no_null_property_initialization' => true,
		'no_short_bool_cast' => true,
		'no_singleline_whitespace_before_semicolons' => true,
		'no_spaces_after_function_name' => true,
		'no_superfluous_elseif' => true,
		'no_trailing_comma_in_singleline_array' => true,
		'no_unneeded_control_parentheses' => true,
		'no_unused_imports' => true,
		'no_useless_else' => true,
		'no_whitespace_in_blank_line' => true,
		'not_operator_with_successor_space' => true,
		'php_unit_construct' => [
			'assertEquals',
			'assertSame',
			'assertNotEquals',
			'assertNotSame'
		],
		'php_unit_mock_short_will_return' => true,
		'php_unit_test_case_static_method_calls' => [
			'call_type' => 'static'
		],
		'phpdoc_add_missing_param_annotation' => true,
		'phpdoc_no_access' => true,
		'phpdoc_no_empty_return' => true,
		'phpdoc_no_package' => true,
		'phpdoc_order' => true,
		'phpdoc_scalar' => true,
		'phpdoc_trim' => true,
		'phpdoc_types' => true,
		'phpdoc_types_order' => [
			'null_adjustment' => 'always_last',
			'sort_algorithm' => 'none'
		],
		'return_type_declaration' => [
			'space_before' => 'none',
		],
		'single_quote' => true,
		'single_trait_insert_per_statement' => true,
		'whitespace_after_comma_in_array' => true,

		'header_comment' => [
			'header' => $header,
			'commentType' => 'comment',
			'location' => 'after_open',
			'separate' => 'both',
		],
	])
	->setIndent("\t")
	->setLineEnding("\n")
;
